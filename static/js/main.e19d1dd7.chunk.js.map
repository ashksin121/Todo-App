{"version":3,"sources":["components/Logo/app-logo.png","hoc/Au/Au.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Logo/Logo.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/UI/Card/Card.js","components/UI/Modal/Modal.js","containers/Welcome/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Aux","props","children","navigationItem","react_default","a","createElement","className","herf","activeClassName","NavigationItems","NavigationItem_NavigationItem","link","console","log","logoLogo","logo","style","height","src","alt","toolbar","onClick","click","Logo_Logo","Navigation_NavigationItems_NavigationItems","backdrop","show","clicked","sideDrawer","attachedClasses","Au","Backdrop_Backdrop","closed","Layout","state","showDrawer","sideClosed","_this","setState","sideOpened","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","card","Modal","nextProps","nextState","modalClosed","transform","opacity","Welcome","node","clicked1","clicked2","clicked3","cancel","message","UI_Modal_Modal","Card_Card","App","hoc_Layout_Layout","containers_Welcome_Welcome","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e19d1dd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app-logo.ffb835de.png\";","const Aux = (props) => props.children;\n\nexport default Aux;","import React from 'react'; //navlink\nimport './NavigationItem.css';\n\nconst navigationItem = (props) => {\n    return (\n        <li className=\"NavigationItem\">\n            <a herf =\"/\" activeClassName=\"active\">{props.children}</a>\n        </li>\n    )\n}\n\nexport default navigationItem;","import React from 'react'; // navlinks\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst NavigationItems = (props) => {\n    return (\n        <ul className=\"NavigationItems\">\n            <NavigationItem link=\"/\">Your Todos</NavigationItem>\n            <NavigationItem link=\"/\">Completed Todos</NavigationItem>\n            <NavigationItem link=\"/\">Authenticate</NavigationItem>\n        </ul>\n    )\n}\n\nexport default NavigationItems;","import React from 'react';\nimport logoLogo from './app-logo.png';\nimport './Logo.css';\n\nconsole.log(logoLogo);\n\nconst logo = (props) => {\n    return (\n        <div className=\"Logo\" style={{height:props.height}}>\n            <img src={logoLogo} alt=\"TodoList\" />\n        </div>\n    )\n}\n\nexport default logo;","import React from 'react';\nimport './Toolbar.css';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport '../SideDrawer/DrawerToggle/DrawerToggle.css';\nimport Logo from '../../Logo/Logo';\n\nconst toolbar = (props) => {\n    return (\n        <header className=\"Toolbar\">\n            <div onClick={props.click} className=\"DrawerToggle\">\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n            <Logo height=\"80%\" />\n            <nav className=\"DesktopOnly\">\n                <NavigationItems />\n            </nav>\n        </header>\n    )\n}\n\nexport default toolbar;","import React from 'react';\nimport './Backdrop.css';\n\nconst backdrop = (props) => {\n    return (\n        props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\n    )\n}\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './SideDrawer.css';\nimport Aux from '../../../hoc/Au/Au';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = \"SideDrawer Close\";\n    if(props.show) {\n        attachedClasses = \"SideDrawer Open\";\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.show} clicked={props.closed} />\n            <div onClick={props.closed}>\n                <div className={attachedClasses}>\n                    <Logo height=\"11%\" />\n                    <nav>\n                        <NavigationItems />\n                    </nav>\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nexport default sideDrawer;","import React, {Component} from 'react';//connect isAuth state\nimport Aux from '../Au/Au';\nimport './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n\n    state = {\n        showDrawer: false\n    }\n\n    sideClosed = () => {\n        this.setState({showDrawer: false});\n    }\n\n    sideOpened = () => {\n        this.setState({showDrawer: true});\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar click={this.sideOpened} />\n                <SideDrawer \n                    show={this.state.showDrawer}\n                    closed={this.sideClosed} />\n                <main className=\"Content\">\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default Layout;","import React from 'react';\nimport './Card.css';\n\nconst card = (props) => {\n    return (\n        <div className=\"Card\" onClick={props.clicked}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default card;","import React, { Component } from 'react';\n\nimport './Modal.css';\nimport Aux from '../../../hoc/Au/Au';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    // componentWillUpdate () {\n    //     console.log('[Modal] WillUpdate');\n    // }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className=\"Modal\"\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;","import React, {Component} from 'react';\n// import Hello from '../../components/Hello/Hello';\nimport Card from '../../components/UI/Card/Card';\nimport Aux from '../../hoc/Au/Au';\nimport Modal from '../../components/UI/Modal/Modal';\nimport './Welcome.css';\n\nclass Welcome extends Component {\n    state = {\n        clicked: false,\n        node: 0\n    }\n\n    clicked1 = () => {\n        this.setState({\n            clicked: true,\n            node: 1\n        });\n    }\n    \n    clicked2 = () => {\n        this.setState({\n            clicked: true,\n            node: 2\n        });\n    }\n\n    clicked3 = () => {\n        this.setState({\n            clicked: true,\n            node: 3\n        });\n    }\n\n    cancel = () => {\n        this.setState({\n            clicked: false,\n            node: 0\n        })\n    }\n\n    render () {\n\n        let message = null;\n        let node = this.state.node;\n        if (node==1) {\n            message = <p>Make your own Todo list just by clicking on \"NEW\" button</p>\n        } else if (node==2) {\n            message = <p>Keep a track of all the work done, and upon finishing a work change the status of work to \"COMPLETED\"</p>\n        } else if (node==3) {\n            message = <p>Manage your Todos, delete the unwanted ones to keep your dashboard clean</p>\n        } else {\n            message = null;\n        }\n\n        return(\n            <Aux>\n                <Modal show={this.state.clicked}\n                    modalClosed={this.cancel}>\n                    {message}\n                </Modal>\n                <div className=\"Hello\">\n                    <Card clicked={this.clicked1}><h1>Make Todo</h1></Card>\n                    <Card clicked={this.clicked2}><h1>Complete the Task</h1></Card>\n                    <Card clicked={this.clicked3}><h1>Manage your Todos</h1></Card>\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Welcome;","import React, {Component} from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport Welcome from './containers/Welcome/Welcome';\nimport './App.css';\n\nclass App extends Component {\n\n  render () {\n    return (\n      <div>\n        <Layout>\n        \n        </Layout>\n        <Welcome />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}